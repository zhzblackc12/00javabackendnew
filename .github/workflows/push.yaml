name: Deploy game data backend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build game data backend
    runs-on: Ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      # 设置qemu来编译多个平台的镜像
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # 设置buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # 登陆 docker hub
      - name: Login to
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # 编译并且推送到 docker hub
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/sjg-data-backend:${{ github.sha }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # 部署到 aws eks coloseo 集群
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWSACCESSKEYID }}
          aws-secret-access-key: ${{ secrets.AWSSECRETACEEESSKEY }}
          aws-region: cn-northwest-1
          role-to-assume: ${{ secrets.AWSROLETOASSUME }}
          role-external-id: ${{ secrets.AWSROLEEXTERNALID }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsSession

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name coloseo

      - name: Set kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Set Image tags and apply kustomize
        working-directory: deploy/overlays/staging/
        run: kustomize edit set image sjg-data-backend=${{ secrets.DOCKERHUB_USERNAME }}/sjg-data-backend:${{ github.sha }}

      - name: Apply kustomize
        working-directory: deploy
        run: kustomize build overlays/staging | kubectl apply -f -
